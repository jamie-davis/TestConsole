<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <PackageLicenseUrl>http://jamie-davis.github.io/TestConsole/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>http://jamie-davis.github.io/TestConsole/</PackageProjectUrl>
    <PackageTags>Unit Test TDD .NET</PackageTags>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSource>True</IncludeSource>
    <IncludeSymbols>True</IncludeSymbols>
    <Description>Test Console is a library that helps you perform unit testing by allowing you to emit data in a readable format as strings. Features include word wrapping and automatic tabulation of data, and the auto formatting of entire objects.

The library was named Test Console because in the simplest use case, the interface for reporting information is like using the .NET Console object. It's not a great name, because the libary's features go a lot further than allowing you to emit unformatted text.

Test Console is now a netstandard library, for compatibility with netcoreapps. Originally, the intention was that Test Console would be paired with ApprovalTests, and you would construct text for approval using TestConsole's Output object. However, at the time of writing, ApprovalTests is not .Net Core compatible, and compatibility still seems some way off, so Test Console now includes functionality similar to the appropriate parts of ApprovalTests, becuase without the ability to approve output the library has no use case. In the fullness of time, Approval Tests will no doubt be released in a netcoreapp compatible form and it may be possible to remove the overlapping features from Test Console.

Comprehensive documentation is available from the library project page.
    </Description>
    <Version>2.0.0</Version>
    <Authors>Jamie Davis</Authors>
    <Product>Test Console</Product>
    <Copyright>Jamie Davis 2014-2018</Copyright>
    <PackageReleaseNotes>Updated the library to be a netstandard2.0 library. A later release will target an earlier netstandard version, but changes to the library will be required in order to achieve that.
    </PackageReleaseNotes>
    <RootNamespace>TestConsoleLib</RootNamespace>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System.Runtime.Loader, Version=4.0.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <HintPath>..\..\..\..\.nuget\packages\microsoft.netcore.app\2.0.0\ref\netcoreapp2.0\System.Runtime.Loader.dll</HintPath>
    </Reference>
  </ItemGroup>
</Project>